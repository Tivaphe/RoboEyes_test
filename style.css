body {
    font-family: sans-serif;
    display: flex;
    flex-direction: column;
    align-items: center;
    margin: 20px;
    background-color: #f4f4f4;
}

#eye-display-area {
    width: 300px;
    height: 150px;
    border: 2px solid #333;
    margin-bottom: 20px;
    background-color: #222; /* Dark background for the "screen" */
    display: flex;
    justify-content: center;
    align-items: center;
    overflow: hidden; /* Hide parts of eyes if they go out of bounds */
}

#eye-display-area > div { /* Basic styling for eye divs */
    background-color: white; /* Default eye color, will be controlled by JS */
    /* Transition for smooth size/shape changes */
    transition: width 0.1s ease-in-out, height 0.1s ease-in-out, border-radius 0.1s ease-in-out, margin-left 0.1s ease-in-out;
    position: relative; /* For pseudo-element positioning */
    box-sizing: border-box; /* Ensure padding/border don't add to width/height */
}

/* Common style for eyelids (pseudo-elements) */
#left-eye::before, #left-eye::after,
#right-eye::before, #right-eye::after {
    content: '';
    display: none; /* Hidden by default, shown by mood class */
    position: absolute;
    background-color: #222; /* Screen background color, acts as eyelid */
    width: 100%; /* Default, can be overridden */
    height: 50%; /* Default, can be overridden */
}

/* TIRED Mood */
/* Covers top part of the eye, slightly angled. Using two for more flexibility if needed. */
/* For simplicity, a single ::before can be used to cover the top half. */
#left-eye.tired-eye::before, #right-eye.tired-eye::before {
    display: block;
    top: 0;
    left: 0;
    height: 50%; /* Cover top half */
    border-bottom: 2px solid white; /* Simulates the eye's border below the eyelid */
    /* Make it match the eye's border radius at the top */
    border-top-left-radius: inherit;
    border-top-right-radius: inherit;
}


/* ANGRY Mood */
/* ::before for the top-inner part, ::after for the top-outer part to create a slant */
/* This will be simplified for now to a single pseudo-element creating an inward slant at the top */
#left-eye.angry-eye::before, #right-eye.angry-eye::before {
    display: block;
    top: 0;
    width: 70%;
    height: 100%;
    background-color: #222; /* Screen color */
    clip-path: polygon(0 0, 100% 0, 50% 100%, 0 100%); /* Triangle pointing inwards */
}

#left-eye.angry-eye::before {
    left: 0;
    /* clip-path: polygon(0 0, 100% 0, 100% 50%, 0% 100%); /* Slant down from outer to inner */
}
#right-eye.angry-eye::before {
    right: 0;
    transform: scaleX(-1); /* Flip the same shape for the right eye */
    /* clip-path: polygon(0 0, 100% 0, 0% 50%, 100% 100%); /* Slant down from inner to outer */
}

/* Specific for Cyclops Angry */
#left-eye.cyclops-angry-eye::before { /* Top-left eyelid */
    display: block;
    top:0;
    left:0;
    width: 50%;
    height: 100%;
    background-color: #222;
    clip-path: polygon(0 0, 100% 0, 0 100%); /* Triangle top-left */
    border-top-left-radius: inherit;
}
#left-eye.cyclops-angry-eye::after { /* Top-right eyelid */
    display: block;
    top: 0;
    right: 0;
    width: 50%;
    height: 100%;
    background-color: #222;
    clip-path: polygon(100% 0, 0 0, 100% 100%); /* Triangle top-right */
    border-top-right-radius: inherit;
}


/* HAPPY Mood */
/* ::after covers the bottom part of the eye, creating a smile effect */
#left-eye.happy-eye::after, #right-eye.happy-eye::after {
    display: block;
    bottom: 0;
    left: 0;
    height: 60%; /* Adjust for "happiness" level */
    background-color: #222; /* Screen background color */
    /* Match eye's border radius at the bottom */
    border-bottom-left-radius: inherit;
    border-bottom-right-radius: inherit;
    border-top-left-radius: 0; /* Make sure top corners are sharp for the eyelid */
    border-top-right-radius: 0;
}

#generated-code-area {
    width: 90%;
    max-width: 500px; /* Same as textarea for consistency */
    margin-bottom: 20px;
}

#controls-area {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    width: 90%;
    max-width: 500px; /* Match textarea width */
}

#sequence-constructor-area {
    width: 90%;
    max-width: 500px; /* Match textarea width */
    padding: 20px;
    border: 1px solid #ccc;
    border-radius: 5px;
    background-color: #fff;
    margin-top: 20px; /* Added to separate from generated code */
    display: flex;
    flex-direction: column;
    gap: 10px;
}

#sequence-constructor-area h2 {
    margin-top: 0;
    text-align: center;
}

#sequence-steps-display {
    border: 1px dashed #bbb;
    padding: 10px;
    min-height: 50px;
    background-color: #f9f9f9;
    border-radius: 4px;
}

#sequence-steps-display .sequence-step {
    padding: 8px;
    border-bottom: 1px solid #eee;
    display: flex;
    justify-content: space-between;
    align-items: center;
}

#sequence-steps-display .sequence-step:last-child {
    border-bottom: none;
}

#sequence-steps-display .sequence-step button {
    padding: 3px 6px;
    font-size: 0.8em;
    background-color: #ff6b6b;
    color: white;
    border: none;
    border-radius: 3px;
    cursor: pointer;
}
#sequence-steps-display .sequence-step button:hover {
    background-color: #e05252;
}

#sequence-constructor-area button {
    padding: 10px;
    background-color: #5cb85c;
    color: white;
    border: none;
    border-radius: 4px;
    cursor: pointer;
}

#sequence-constructor-area button:hover {
    background-color: #4cae4c;
}

#sequence-constructor-area button#clear-sequence-button {
    background-color: #d9534f;
}
#sequence-constructor-area button#clear-sequence-button:hover {
    background-color: #c9302c;
    gap: 15px;
    padding: 20px;
    border: 1px solid #ccc;
    border-radius: 5px;
    background-color: #fff;
    margin-bottom: 20px;
}

#controls-area div {
    display: flex;
    flex-direction: column;
}

#controls-area label {
    margin-bottom: 5px;
    font-weight: bold;
}

#controls-area input[type="number"],
#controls-area select {
    padding: 8px;
    border: 1px solid #ddd;
    border-radius: 4px;
    box-sizing: border-box;
}

#controls-area input[type="checkbox"] {
    margin-right: 5px;
    vertical-align: middle;
}

#controls-area div > label[for*="Mode"], /* Labels for checkboxes */
#controls-area div > label[for*="autoblinker"] {
    display: inline; /* Keep checkbox and label on the same line */
    font-weight: normal;
}


#generated-code {
    width: 90%;
    max-width: 500px;
    padding: 10px;
    border: 1px solid #ccc;
    border-radius: 4px;
    font-family: monospace;
    background-color: #e9e9e9;
}
